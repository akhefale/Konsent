!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ArticleForm	konsent/__init__.py	/^class ArticleForm(Form):$/;"	c
BaseForm	konsent/__init__.py	/^class BaseForm(Form):$/;"	c
Comment	konsent/models.py	/^class Comment(db.Model):$/;"	c
CommentForm	konsent/__init__.py	/^class CommentForm(BaseForm):$/;"	c
Meta	konsent/__init__.py	/^    class Meta:$/;"	c	class:BaseForm
NO_RESULTS_ERROR	konsent/__init__.py	/^NO_RESULTS_ERROR = 'Nothing to show.'$/;"	v
Post	konsent/models.py	/^class Post(db.Model):$/;"	c
REQUIRED_VOTES_DIVISOR	konsent/__init__.py	/^REQUIRED_VOTES_DIVISOR = 2  # divide by this to progress to stage 2$/;"	v
RESTING_TIME	konsent/__init__.py	/^RESTING_TIME = 1  # resting time in phase 2 and 3 in minutes - 1440 = 2 days$/;"	v
RegisterForm	konsent/__init__.py	/^class RegisterForm(Form):$/;"	c
RegisterUnionForm	konsent/__init__.py	/^class RegisterUnionForm(Form):$/;"	c
Union	konsent/models.py	/^class Union(db.Model):$/;"	c
UpvoteForm	konsent/__init__.py	/^class UpvoteForm(BaseForm):$/;"	c
User	konsent/models.py	/^class User(db.Model):$/;"	c
VetoForm	konsent/__init__.py	/^class VetoForm(BaseForm):$/;"	c
Vote	konsent/models.py	/^class Vote(db.Model):$/;"	c
__init__	konsent/models.py	/^    def __init__(self, author, target, target_type=None):$/;"	m	class:Vote
__init__	konsent/models.py	/^    def __init__(self, post, author, body, author_name=None):$/;"	m	class:Comment
__init__	konsent/models.py	/^    def __init__(self, title, body, union, author, create_date=None):$/;"	m	class:Post
__init__	konsent/models.py	/^    def __init__(self, union_name, password):$/;"	m	class:Union
__init__	konsent/models.py	/^    def __init__(self, username, password, union):$/;"	m	class:User
__tablename__	konsent/models.py	/^    __tablename__ = 'comments'$/;"	v	class:Comment
__tablename__	konsent/models.py	/^    __tablename__ = 'posts'$/;"	v	class:Post
__tablename__	konsent/models.py	/^    __tablename__ = 'unions'$/;"	v	class:Union
__tablename__	konsent/models.py	/^    __tablename__ = 'users'$/;"	v	class:User
__tablename__	konsent/models.py	/^    __tablename__ = 'votes'$/;"	v	class:Vote
about	konsent/__init__.py	/^def about():$/;"	f
app	konsent/__init__.py	/^app = Flask(__name__)$/;"	v
author	konsent/models.py	/^    author = db.relationship('User', backref=db.backref('comments', lazy=True))$/;"	v	class:Comment
author	konsent/models.py	/^    author = db.relationship('User', backref=db.backref('posts', lazy=True),$/;"	v	class:Post
author	konsent/models.py	/^    author = db.relationship('User', backref=db.backref('votes', lazy=True))$/;"	v	class:Vote
author_id	konsent/models.py	/^    author_id = db.Column($/;"	v	class:Comment
author_id	konsent/models.py	/^    author_id = db.Column($/;"	v	class:Post
author_id	konsent/models.py	/^    author_id = db.Column($/;"	v	class:Vote
author_name	konsent/models.py	/^    author_name = db.Column(db.Unicode(length=255), nullable=False)$/;"	v	class:Comment
authority	konsent/models.py	/^    authority = db.Column(db.Integer, default=0)$/;"	v	class:User
body	konsent/__init__.py	/^    body = TextAreaField($/;"	v	class:ArticleForm
body	konsent/__init__.py	/^    body = TextAreaField('', [validators.length(min=1, max=1000)])$/;"	v	class:CommentForm
body	konsent/models.py	/^    body = db.Column(db.UnicodeText, nullable=False)$/;"	v	class:Comment
body	konsent/models.py	/^    body = db.Column(db.UnicodeText, nullable=False)$/;"	v	class:Post
check_password	konsent/models.py	/^    def check_password(self, password):$/;"	m	class:Union
check_password	konsent/models.py	/^    def check_password(self, password):$/;"	m	class:User
comment	konsent/models.py	/^    comment = db.relationship($/;"	v	class:Vote
comment_id	konsent/models.py	/^    comment_id = db.Column($/;"	v	class:Vote
completed	konsent/__init__.py	/^def completed():$/;"	f
confirm	konsent/__init__.py	/^    confirm = PasswordField('Confirm password')$/;"	v	class:RegisterForm
confirm	konsent/__init__.py	/^    confirm = PasswordField('Enter your password again')$/;"	v	class:RegisterUnionForm
create_date	konsent/models.py	/^    create_date = db.Column($/;"	v	class:Post
csrf	konsent/__init__.py	/^        csrf = True$/;"	v	class:BaseForm.Meta
csrf_class	konsent/__init__.py	/^        csrf_class = SessionCSRF$/;"	v	class:BaseForm.Meta
csrf_secret	konsent/__init__.py	/^        csrf_secret = b'jkasjl123nm,nxm#6'$/;"	v	class:BaseForm.Meta
csrf_time_limit	konsent/__init__.py	/^        csrf_time_limit = timedelta(minutes=20)$/;"	v	class:BaseForm.Meta
db	konsent/models.py	/^db = SQLAlchemy()$/;"	v
foreign_keys	konsent/models.py	/^                             foreign_keys=[author_id])$/;"	v	class:Post
foreign_keys	konsent/models.py	/^        foreign_keys=[vetoed_by_id])$/;"	v	class:Post
help	konsent/__init__.py	/^              help='Database host')$/;"	v
help	konsent/__init__.py	/^              help='Database name')$/;"	v
help	konsent/__init__.py	/^              help='Database password')$/;"	v
help	konsent/__init__.py	/^              help='Database username')$/;"	v
id	konsent/models.py	/^    id = db.Column($/;"	v	class:Comment
id	konsent/models.py	/^    id = db.Column($/;"	v	class:Post
id	konsent/models.py	/^    id = db.Column($/;"	v	class:Union
id	konsent/models.py	/^    id = db.Column($/;"	v	class:Vote
id	konsent/models.py	/^    id = db.Column(db.Integer, primary_key=True)$/;"	v	class:User
index	konsent/__init__.py	/^def index():$/;"	f
is_logged_in	konsent/__init__.py	/^def is_logged_in(func):$/;"	f
is_not_logged_in	konsent/__init__.py	/^def is_not_logged_in(f):$/;"	f
list_comments	konsent/__init__.py	/^def list_comments(post_id, username):$/;"	f
list_unions	konsent/__init__.py	/^def list_unions():$/;"	f
login	konsent/__init__.py	/^def login():$/;"	f
logout	konsent/__init__.py	/^def logout():$/;"	f
main	konsent/__init__.py	/^def main(action,$/;"	f
new_post	konsent/__init__.py	/^def new_post():$/;"	f
password	konsent/__init__.py	/^    password = PasswordField('Password', [$/;"	v	class:RegisterForm
password	konsent/__init__.py	/^    password = PasswordField('Union password', [$/;"	v	class:RegisterUnionForm
password	konsent/models.py	/^    password = db.Column(db.String(length=255), nullable=False)$/;"	v	class:User
password	konsent/models.py	/^    password = db.Column(db.Unicode(length=255), nullable=False)$/;"	v	class:Union
phase	konsent/models.py	/^    phase = db.Column(db.Integer, nullable=False, default=1)$/;"	v	class:Post
phase1	konsent/__init__.py	/^def phase1():$/;"	f
phase2	konsent/__init__.py	/^def phase2():$/;"	f
phase3	konsent/__init__.py	/^def phase3():$/;"	f
post	konsent/models.py	/^    post = db.relationship('Post', backref=db.backref('comments', lazy=True))$/;"	v	class:Comment
post	konsent/models.py	/^    post = db.relationship('Post', backref=db.backref('votes', lazy=True))$/;"	v	class:Vote
post1	konsent/__init__.py	/^def post1(post_id):$/;"	f
post2	konsent/__init__.py	/^def post2(post_id):$/;"	f
post3	konsent/__init__.py	/^def post3(post_id):$/;"	f
post_completed	konsent/__init__.py	/^def post_completed(post_id):$/;"	f
post_id	konsent/models.py	/^    post_id = db.Column(db.Integer, db.ForeignKey('posts.id'), nullable=False)$/;"	v	class:Comment
post_id	konsent/models.py	/^    post_id = db.Column(db.Integer, db.ForeignKey('posts.id'), nullable=True)$/;"	v	class:Vote
print_unions	konsent/__init__.py	/^def print_unions():$/;"	f
register	konsent/__init__.py	/^def register():$/;"	f
register_union	konsent/__init__.py	/^def register_union():$/;"	f
solution	konsent/models.py	/^    solution = db.Column(db.UnicodeText)$/;"	v	class:Post
time_since_create	konsent/models.py	/^    def time_since_create(self):$/;"	m	class:Post
title	konsent/__init__.py	/^    title = StringField('Title', [validators.Length(min=1, max=150)])$/;"	v	class:ArticleForm
title	konsent/models.py	/^    title = db.Column(db.UnicodeText, nullable=False)$/;"	v	class:Post
union	konsent/models.py	/^    union = db.relationship('Union', backref=db.backref('posts', lazy=True))$/;"	v	class:Post
union	konsent/models.py	/^    union = db.relationship('Union', backref=db.backref('users', lazy=True))$/;"	v	class:User
union_id	konsent/models.py	/^    union_id = db.Column($/;"	v	class:Post
union_id	konsent/models.py	/^    union_id = db.Column($/;"	v	class:User
union_name	konsent/__init__.py	/^    union_name = StringField('Name', [validators.Length(min=1, max=50)])$/;"	v	class:RegisterUnionForm
union_name	konsent/models.py	/^    union_name = db.Column(db.Unicode(length=255), nullable=False)$/;"	v	class:Union
union_password	konsent/__init__.py	/^    union_password = PasswordField($/;"	v	class:RegisterForm
unvote_comment	konsent/__init__.py	/^def unvote_comment(comment_id, post_id):$/;"	f
update_phases	konsent/__init__.py	/^def update_phases():$/;"	f
username	konsent/__init__.py	/^    username = StringField('Username', [validators.Length(min=4, max=50),$/;"	v	class:RegisterForm
username	konsent/models.py	/^    username = db.Column(db.Unicode(length=191), nullable=False, unique=True)$/;"	v	class:User
users_union	konsent/__init__.py	/^    users_union = SelectField($/;"	v	class:RegisterForm
veto	konsent/__init__.py	/^    veto = BooleanField('')  # this field is hidden and is true$/;"	v	class:VetoForm
veto	konsent/__init__.py	/^def veto(post_id):$/;"	f
vetoed	konsent/__init__.py	/^def vetoed():$/;"	f
vetoed_by	konsent/models.py	/^    vetoed_by = db.relationship($/;"	v	class:Post
vetoed_by_id	konsent/models.py	/^    vetoed_by_id = db.Column($/;"	v	class:Post
vote	konsent/__init__.py	/^    vote = BooleanField($/;"	v	class:UpvoteForm
vote_comment	konsent/__init__.py	/^def vote_comment(comment_id, post_id):$/;"	f
votes_count	konsent/models.py	/^    votes_count = db.Column(db.Integer, nullable=False, default=0)$/;"	v	class:Comment
votes_count	konsent/models.py	/^    votes_count = db.Column(db.Integer, nullable=False, default=0)$/;"	v	class:Post
wrap	konsent/__init__.py	/^    def wrap(*args, **kwargs):$/;"	f	function:is_logged_in
wrap	konsent/__init__.py	/^    def wrap(*args, **kwargs):$/;"	f	function:is_not_logged_in
